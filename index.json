[{"content":"Ideally, If you wish to keep your code private \u0026amp; still use github-pages then you got to pay $4 /month (i.e. become a github pro user). But do you know that you can do it for free ? Here is the way. Make a private repo 1st where you will be hosting your source code. Next create a public repo where you wish the static/build files to be placed.\nNow in your private repo create a folder \u0026ldquo;.github\u0026rdquo; \u0026amp; then a folder \u0026ldquo;workflows\u0026rdquo; inside it. Now create a file deploy.yml.\n","permalink":"https://sidrana.dev/posts/private-github-repo-with-github-pages-for-free/","summary":"Ideally, If you wish to keep your code private \u0026amp; still use github-pages then you got to pay $4 /month (i.e. become a github pro user). But do you know that you can do it for free ? Here is the way. Make a private repo 1st where you will be hosting your source code. Next create a public repo where you wish the static/build files to be placed.\nNow in your private repo create a folder \u0026ldquo;.","title":"Private github repo with github pages for free"},{"content":"Example command rsync -ahvz user@production_server:/path/to/source/content /path/to/local/backup/storage/  rsync For a full details of rsync, check out the manual page.\nA basic rsync command pattern:\nrsync copyfrom copyto  The file or directory you want to back up is copyfrom, and copyto is the place you want to store the backup. Copyfrom and copyto are arguments of the rsync command and are required. An rsync command with basic copyfrom and copyto arguments would look like this:\nrsync user@production_server:~/public ~/backups/mybackup |---| |-----------------------------| |----------------| ^ ^ ^ | | | rsync copyfrom copyto  Rsync can also run with additional options, which are included in the command before the main arguments:\nrsync --options copyfrom copyto  -ahvz Here are some standard options for rsync:\n-ahvz  These are four rsync options that have been combined into a single directive. You can also list them out individually like this:\n-a -h -v -z  These options have the following effects:\n -a or \u0026ndash;archive: Preserves our file permissions and ownership, copies recursively, etc. -h or \u0026ndash;human-readable: Number outputs are human readable -v or \u0026ndash;verbose: Displays more output -z or \u0026ndash;compress: Compress file data during transfer  You can add or remove any of the rsync options. For example, if you don\u0026rsquo;t need to see all of the output, you could just run:\n-ahz  When creating backups, the essential option is -a or --archive.\nSource Location The copyfrom location is the path to what you want to back up on your production_server. This is where you should put the file path to your content on the server.\nuser@production_server:~/public |--------------------| |------| ^ ^ | | SSH login path  Since you\u0026rsquo;re trying to copy from a remote server (the production_server), you should provide the SSH login credentials first. Then use a colon (:), followed by an absolute file path to the folder you want to back up.\nIn this example, you\u0026rsquo;re backing up the ~/public directory, which is where your websites should be located if you followed the Hosting a Website guide. ~ is a shortcut for /home/user/. The trailing / is omitted from the final directory because you want to include the public folder itself in the backup, not just its contents.\nIf you want to do a full-server backup from root, you should use /* as your path. You should also exclude some folders from the backup so you don\u0026rsquo;t get a lot of warnings and errors every time you run it. /dev, /proc, /sys, /tmp, and /run do not contain permanent data, and /mnt is the mount point for other file systems. To make an exclusion, add the --exclude option at the very end of the rsync command, after everything else.\n--exclude={/dev/*,/proc/*,/sys/*,/tmp/*,/run/*,/mnt/*}  You will also need to use either root or a sudo-capable user for the backup, if you are backing up from /* or another high-level directory. If you use a sudo user, you will need to either disable the need for the password when rsync is used, or send the password to the server. The crashingdaily blog has a good discussion of this.\nTarget Location The copyto location is the path to where you want to store your backup on your backup_server.\n~/backups/mybackup  In the command for automatic backups (see below), a date variable is appended to the file path:\n~/backups/public_$(date -I) |--------| \u0026lt;- date variable |-------------------------| ^ | path  This is the local file path on the backup_server where you want to store the backups. The variable $(date -I) uses the built-in date function to add the current date to the end of the file path. This makes sure a new folder is created for each backup, and also makes individual backups easy to find.\nCron The following command extends the previous example to enable automatic backups and use some advanced options:\n0 3 * * * rsync -ahvz --delete --link-dest=~/backups/public_orig user@production_server:~/public ~/backups/public_$(date -I)  The series of numbers and asterisks specifies when the cron task should be run (remember, this command was added to the crontab file earlier in this guide).\n0 3 * * * Command ^ ^ ^ ^ ^ ^ | | | | | | Minute Hour Day of Month Month Weekday Shell command  For each of the five time categories you can specify either a specific number or *, which means \u0026ldquo;every.\u0026rdquo; Use the 24-hour clock for hours. The example above specifies that the command should run on the first minute of the third hour of every day (3 am). Anything you add after the fifth number or asterisk is considered the actual command, which will be run just as if you had typed it in your shell. You can read more about cron here.\nFor testing purposes, you can set the task to run at * * * * *, which will create a new backup every minute. Running backups like this may use your allotted transfer, so running a new one every minute could result in overage charges.\n","permalink":"https://sidrana.dev/posts/rsync/","summary":"Example command rsync -ahvz user@production_server:/path/to/source/content /path/to/local/backup/storage/  rsync For a full details of rsync, check out the manual page.\nA basic rsync command pattern:\nrsync copyfrom copyto  The file or directory you want to back up is copyfrom, and copyto is the place you want to store the backup. Copyfrom and copyto are arguments of the rsync command and are required. An rsync command with basic copyfrom and copyto arguments would look like this:","title":"Understanding the Rsync Command"},{"content":"Connect App The connect app on windows is a boon when you wish to see your mobile screen on PC. It seamlessly connects mobile phone to your PC and even allows you to control your phone from your PC. This is an app from Microsoft \u0026amp; thus you need not worry about any security issues.\nHow it went missing ? After installing the latest update in my PC, I was astonished to find that the connect app was missing. After a lot of struggle, I found the most convenient way of installing it.\nSteps Nothing much. Just fire-up CMD as administrator (elevated command prompt) and enter the following.\nDISM /Online /Add-Capability /CapabilityName:App.WirelessDisplay.Connect~~~~0.0.1.0 That shoud get a smile on your face ðŸ˜„ ","permalink":"https://sidrana.dev/posts/newpost/","summary":"Connect App The connect app on windows is a boon when you wish to see your mobile screen on PC. It seamlessly connects mobile phone to your PC and even allows you to control your phone from your PC. This is an app from Microsoft \u0026amp; thus you need not worry about any security issues.\nHow it went missing ? After installing the latest update in my PC, I was astonished to find that the connect app was missing.","title":"Install the missing connect software on windows 10"},{"content":"sudo apt get modssl \u0026amp;\u0026amp; ","permalink":"https://sidrana.dev/more_about_me/","summary":"sudo apt get modssl \u0026amp;\u0026amp; ","title":"More about me"}]